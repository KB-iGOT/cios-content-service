spring.application.name=cios-content-service
server.port=7001

management.endpoints.web.exposure.include=health

#-------------------- PostgreSQL configuration--------------------------------
spring.datasource.url=jdbc:postgresql://localhost:5432/sunbird
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.main.allow-bean-definition-overriding=true

#-------------------------tranformation-------------------------------------
transformation.source-to-target.spec.path=/Transformation/cornell.json
cornell.progress.transformation.source-to-target.spec.path=/Transformation/cornellProgressJson.json

#------------------------Kafka Configuration---------------------------------
#kafka Server
spring.kafka.bootstrap.servers=localhost:9092
spring.kafka.cornell.topic.name=dev.cornell.progress
spring.kafka.consumer.group.id=cornell-progress
#kafka properties
kakfa.offset.reset.value=latest
kafka.max.poll.interval.ms=15000
kafka.max.poll.records=100
kafka.auto.commit.interval.ms=10000

#--------------------Redis config-----------------------------------------------
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
spring.redis.cacheTtl= 86400

#-------------------cb-pores partnerService---------------------------------------------
cb.pores.service.url=http://localhost:7001
partner.read.path=/contentpartner/v1/readbyname/
partner.create.update.path=/contentpartner/v1/create
sb.api.key=apikey


